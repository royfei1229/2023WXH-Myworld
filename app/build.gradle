apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("MM_dd_HH_mm")
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.silvervine.macnets"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        vectorDrawables.useSupportLibrary = rootProject.ext.useSupportVectorDrawablesLibrary
        testInstrumentationRunner rootProject.ext.testInstrumentationRunner
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    signingConfigs {
        release {
            keyAlias project.KEY_ALIAS
            keyPassword project.KEY_PASSWORD
            storeFile file(project.KEYSTORE_FILE)
            storePassword project.KEYSTORE_PASSWORD
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def fileName
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        if (variant.buildType.name.equals('release')) {
                            fileName = "${rootProject.name}_${releaseTime()}_v${defaultConfig.versionName}_release.apk"
                        } else if (variant.buildType.name.equals('debug')) {
                            fileName = "${rootProject.name}_${releaseTime()}_v${defaultConfig.versionName}_debug.apk"
                        }
                        outputFileName = fileName
                    }
                }
            }
        }
    }
    sourceSets {
        main.jniLibs.srcDirs = ['libs']
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    google()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation(name: 'silvervine_release', ext: 'aar')
    implementation 'com.chanven.lib:cptr:1.1.0'
    api 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    implementation project(':pgJniTunnel')
    implementation 'com.lovedise:permissiongen:0.0.6'
    implementation 'com.tencent.bugly:crashreport:latest.release' //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:latest.release' //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
}
